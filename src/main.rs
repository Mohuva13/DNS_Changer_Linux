use std::io::Write;
use nix::unistd::Uid;
mod all_dns;

fn main() {
    // Check user has linux root permission or not. If not, exit the program.
    if !Uid::effective().is_root() {
        println!("Please run as root!");
        std::process::exit(1);
    }

    let dns_list = all_dns::dns_loader::load_dns();

    // Show the dns_list and user choose one of them

    println!("DNS List:");
    for (i, dns) in dns_list.iter().enumerate() {
        println!("{}. {} - {}", i, dns.0, dns.1);
    }
    println!("Choose one of them:");
    let mut dns_index = String::new();
    std::io::stdin()
        .read_line(&mut dns_index)
        .expect("Failed to read line");
    let dns_index: usize = dns_index.trim().parse().expect("Please type a number!");
    let dns = &dns_list[dns_index];
    println!("You choose: {}", dns.1);

    // Export choosen dns
    let mut file = std::fs::File::create("./choosen_dns.txt").expect("create failed");
    file.write_all(b"# Generated by NetworkManager\n").expect("write failed");
    file.write_all(format!("nameserver {}\n", dns.2).as_bytes()).expect("write failed");
    file.write_all(format!("nameserver {}\n", dns.3).as_bytes()).expect("write failed");




}
